networks:
  redis-cluster-compose:
    driver: bridge

services:
  spring-1:
    build: .
    networks:
      - redis-cluster-compose
    environment:
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      slave-node-1:
        condition: service_healthy
      slave-node-2:
        condition: service_healthy
      slave-node-3:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/entrypoint.sh"]

  spring-2:
    build: .
    networks:
      - redis-cluster-compose
    environment:
      - SERVER_PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      slave-node-1:
        condition: service_healthy
      slave-node-2:
        condition: service_healthy
      slave-node-3:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/entrypoint.sh"]

  rabbitmq:
    networks:
      - redis-cluster-compose
    image: rabbitmq:management-alpine
    container_name: rabbit-mq-container
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_ERLANG_COOKIE=rabbitmqCookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  redis-node-1:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: redis-node-1
    container_name: redis-test1
    volumes:
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6379", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  redis-node-2:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: redis-node-2
    container_name: redis-test2
    volumes:
      - ./conf/redis1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6380", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6380:6380"

  redis-node-3:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: redis-node-3
    container_name: redis-test3
    volumes:
      - ./conf/redis2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6381", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6381:6381"

  slave-node-1:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: slave-node-1
    container_name: redis-slave-test1
    volumes:
      - ./conf/slave.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6382", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6382:6382"

  slave-node-2:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: slave-node-2
    container_name: redis-slave-test2
    volumes:
      - ./conf/slave1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6383", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6383:6383"

  slave-node-3:
    networks:
      - redis-cluster-compose
    image: redis
    hostname: slave-node-3
    container_name: redis-slave-test3
    volumes:
      - ./conf/slave2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "-p", "6384", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6384:6384"

  redis-cluster-entry:
    networks:
      - redis-cluster-compose
    image: redis
    restart: no
    container_name: redis-cluster-entry
    #command: redis-cli --cluster create 127.0.0.1:6379 127.0.0.1:6380 127.0.0.1:6381 127.0.0.1:6382 127.0.0.1:6383 127.0.0.1:6384 --cluster-replicas 1 --cluster-yes
    command: redis-cli --cluster create redis-node-1:6379 redis-node-2:6380 redis-node-3:6381 slave-node-1:6382 slave-node-2:6383 slave-node-3:6384 --cluster-replicas 1 --cluster-yes
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - slave-node-1
      - slave-node-2
      - slave-node-3